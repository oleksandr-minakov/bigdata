<!--
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-3.0.xsd
							http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<context:annotation-config/>

    <context:component-scan
            base-package="com.mirantis.aminakov.bigdatacourse.dao" />
    <context:component-scan
            base-package="com.mirantis.aminakov.bigdatacourse.service" />
	
	<bean id="service"
		class="com.mirantis.aminakov.bigdatacourse.service.ServiceToDao" />

	<bean id="statService"	class="com.mirantis.aminakov.bigdatacourse.service.StatService" />

    <bean id="dao" class="com.mirantis.aminakov.bigdatacourse.dao.cassandra.DaoCassandra">
        <constructor-arg ref = "constants"/>

    </bean>
	
    <bean id="daoJdbc" class="com.mirantis.aminakov.bigdatacourse.dao.mysql.DaoJdbc">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://0.0.0.0:3306/bigdata" />
        <property name="username" value="aminakov" />
        <property name="password" value="bigdata" />
    </bean>


    <bean id="memClient" class="com.mirantis.aminakov.bigdatacourse.dao.memcached.MemClient">
        <constructor-arg type="java.net.InetSocketAddress" ref="memcachedAddress"/>
    </bean>

    <bean id="memcachedAddress" class="java.net.InetSocketAddress">
        <constructor-arg type="java.lang.String" value="0.0.0.0"/>
        <constructor-arg type="int" value="11211"/>
    </bean>

    <bean id="daoSolr" class="com.mirantis.aminakov.bigdatacourse.dao.solr.DaoSolr">
        <constructor-arg ref="parameters"/>
    </bean>

    <bean id="parameters" class="com.mirantis.aminakov.bigdatacourse.dao.solr.Parameters">
        <constructor-arg type="java.lang.String" value="http://0.0.0.0:8080/solr-web"/>
        <constructor-arg type="com.mirantis.aminakov.bigdatacourse.dao.NAS.NASMapping" ref="nas"/>
    </bean>

    <bean id="nas" class="com.mirantis.aminakov.bigdatacourse.dao.NAS.NASMapping">
        <constructor-arg type="java.lang.String" value="/tmp/solr_nas/"/>
        <constructor-arg type="int" value="3" />
    </bean>

    <bean id ="cassandra" class="com.mirantis.aminakov.bigdatacourse.dao.cassandra.DaoCassandra">
        <constructor-arg ref = "constants"/>
    </bean>

    <bean id="constants" class="com.mirantis.aminakov.bigdatacourse.dao.cassandra.Constants" >
        <constructor-arg type = "java.lang.String" value="Cassandra Cluster"/>
        <constructor-arg type = "java.lang.String" value="Bookshelf"/>
        <constructor-arg type = "java.lang.String" value="Books"/>
	    <constructor-arg>
	            <list>
	                <value>0.0.0.0</value>
	                <value>0.0.0.0</value>
	                <value>0.0.0.0</value>
	            </list>
	    </constructor-arg>
    </bean>

    <bean id="hdfs" class="com.mirantis.aminakov.bigdatacourse.dao.hadoop.DaoHDFS">
        <constructor-arg ref="configuration"/>
    </bean>

    <bean id="configuration" class="com.mirantis.aminakov.bigdatacourse.dao.hadoop.configuration.HadoopConnector">
        <constructor-arg type = "java.lang.String" value="0.0.0.0"/>
        <constructor-arg type = "java.lang.String" value="9000"/>
        <constructor-arg type = "java.lang.String" value="hadoop"/>
        <constructor-arg type = "java.lang.String" value="/bookshelf/books/"/>
    </bean>

   &lt;!&ndash; Beans that are configuration of MapReduce Job &ndash;&gt;

	
    <bean id="job" class="com.mirantis.aminakov.bigdatacourse.mapreduce.WordCounterJob"/>
	<bean id="mapper" class="com.mirantis.aminakov.bigdatacourse.mapreduce.WordCounterJob.Map"/>
    <bean id="reducer" class="com.mirantis.aminakov.bigdatacourse.mapreduce.WordCounterJob.Reduce"/>

</beans>
-->
